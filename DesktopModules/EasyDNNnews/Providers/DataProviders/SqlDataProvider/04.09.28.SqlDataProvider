/****** Permissions by roles PortalId 10 cleanup and set to null ******/
/****** clean tables before settings Moduleid to NULL ******/

/****** Permissions by user PortalId 10 cleanup and set to null ******/
/****** clean tables before settings Moduleid to NULL ******/

BEGIN TRANSACTION;
BEGIN TRY
	BEGIN TRY
		ALTER TABLE [dbo].[EasyDNNNewsRolePremissionSettings] ALTER COLUMN [ModuleID] int NULL
		UPDATE [dbo].[EasyDNNNewsRolePremissionSettings] SET [ModuleID] = NULL WHERE ModuleID = 10
	END TRY
	BEGIN CATCH
	END CATCH

	BEGIN TRY
	DELETE FROM [dbo].[EasyDNNNewsRolePremissionSettings] WHERE ModuleID NOT IN (SELECT ModuleID From {databaseOwner}{objectQualifier}Modules);
	DELETE FROM [dbo].[EasyDNNNewsRolePremissionSettings] WHERE PortalID NOT IN (SELECT PortalID From {databaseOwner}{objectQualifier}Portals);
	END TRY
	BEGIN CATCH
	END CATCH

END TRY
BEGIN CATCH
	IF @@TRANCOUNT > 0
		ROLLBACK TRANSACTION;
END CATCH;
IF @@TRANCOUNT > 0
	COMMIT TRANSACTION;

GO

BEGIN TRANSACTION;
BEGIN TRY
	BEGIN TRY
		ALTER TABLE [dbo].[EasyDNNNewsUserPremissionSettings] ALTER COLUMN [ModuleID] int NULL
		UPDATE [dbo].[EasyDNNNewsUserPremissionSettings] SET [ModuleID] = NULL WHERE ModuleID = 10
	END TRY
	BEGIN CATCH
	END CATCH

	BEGIN TRY
	DELETE FROM [dbo].[EasyDNNNewsUserPremissionSettings] WHERE ModuleID NOT IN (SELECT ModuleID From {databaseOwner}{objectQualifier}Modules);
	DELETE FROM [dbo].[EasyDNNNewsUserPremissionSettings] WHERE PortalID NOT IN (SELECT PortalID From {databaseOwner}{objectQualifier}Portals);
	END TRY
	BEGIN CATCH
	END CATCH
END TRY
BEGIN CATCH
	IF @@TRANCOUNT > 0
		ROLLBACK TRANSACTION;
END CATCH;
IF @@TRANCOUNT > 0
	COMMIT TRANSACTION;

GO

/** add for roles FK on permissions moduleid **/
BEGIN TRY
	/****** Object:  ForeignKey [FK_EasyDNNNewsRolePremissionSettings_Modules]    Script Date: 01/04/2013 10:01:25 ******/
	IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsRolePremissionSettings_Modules]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsRolePremissionSettings]'))
	ALTER TABLE [dbo].[EasyDNNNewsRolePremissionSettings]  WITH CHECK ADD CONSTRAINT [FK_EasyDNNNewsRolePremissionSettings_Modules] FOREIGN KEY([ModuleID])
	REFERENCES {databaseOwner}{objectQualifier}Modules ([ModuleID]) ON DELETE CASCADE
	IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsRolePremissionSettings_Modules]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsRolePremissionSettings]'))
	ALTER TABLE [dbo].[EasyDNNNewsRolePremissionSettings] CHECK CONSTRAINT [FK_EasyDNNNewsRolePremissionSettings_Modules]
END TRY
BEGIN CATCH
END CATCH
GO

/** add for roles FK on permissions moduleid **/
BEGIN TRY
	/****** Object:  ForeignKey [FK_EasyDNNNewsUserPremissionSettings_Modules]    Script Date: 01/04/2013 10:01:25 ******/
	IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsUserPremissionSettings_Modules]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsUserPremissionSettings]'))
	ALTER TABLE [dbo].[EasyDNNNewsUserPremissionSettings]  WITH CHECK ADD CONSTRAINT [FK_EasyDNNNewsUserPremissionSettings_Modules] FOREIGN KEY([ModuleID])
	REFERENCES {databaseOwner}{objectQualifier}Modules ([ModuleID]) ON DELETE CASCADE
	IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsUserPremissionSettings_Modules]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsUserPremissionSettings]'))
	ALTER TABLE [dbo].[EasyDNNNewsUserPremissionSettings] CHECK CONSTRAINT [FK_EasyDNNNewsUserPremissionSettings_Modules]
END TRY
BEGIN CATCH
END CATCH
GO
/** add for roles FK on permissions portalid **/
BEGIN TRY
	/****** Object:  ForeignKey [FK_EasyDNNNewsUserPremissionSettings_Portals]    Script Date: 01/04/2013 10:01:25 ******/
	IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsUserPremissionSettings_Portals]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsUserPremissionSettings]'))
	ALTER TABLE [dbo].[EasyDNNNewsUserPremissionSettings]  WITH CHECK ADD CONSTRAINT [FK_EasyDNNNewsUserPremissionSettings_Portals] FOREIGN KEY([PortalID])
	REFERENCES {databaseOwner}{objectQualifier}Portals ([PortalID]) ON DELETE CASCADE
	IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsUserPremissionSettings_Portals]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsUserPremissionSettings]'))
	ALTER TABLE [dbo].[EasyDNNNewsUserPremissionSettings] CHECK CONSTRAINT [FK_EasyDNNNewsUserPremissionSettings_Portals]
END TRY
BEGIN CATCH
END CATCH