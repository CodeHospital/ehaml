/******  StoredProcedure [dbo].[EasyDNNNewsPermissions]	******/

if not exists (select * from INFORMATION_SCHEMA.columns where table_name = 'EasyDNNNewsUserPremissionSettings' and column_name = 'PostToSocialNetwork')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsUserPremissionSettings] ADD PostToSocialNetwork bit NOT NULL DEFAULT(0)
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = 'EasyDNNNewsRolePremissionSettings' and column_name = 'PostToSocialNetwork')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsRolePremissionSettings] ADD PostToSocialNetwork bit NOT NULL DEFAULT(0)
END
GO

/*** Kreiranje PortalSettingsa ***/

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsPortalSettings]') AND type in (N'U'))
BEGIN
	SET ANSI_NULLS ON
	SET QUOTED_IDENTIFIER ON
	CREATE TABLE [dbo].[EasyDNNNewsPortalSettings](
		[PortalID] [int] NOT NULL,
		[ArticleApproveConfirm] [bit] NOT NULL,
		[CommentApproveConfirm] [bit] NOT NULL,
		[TwitterConsumerKey] [nvarchar](250) NULL,
		[TwitterConsumerSecret] [nvarchar](250) NULL,
		[FacebookAppID] [nvarchar](250) NULL,
		[FacebookAppSecret] [nvarchar](250) NULL,
		[EnableTwitter] [bit] NOT NULL,
		[TwitterAccessToken] [nvarchar](250) NULL,
		[TwitterAccessSecret] [nvarchar](250) NULL,
		[EnableFacebook] [bit] NOT NULL,
		[FacebookAccessToken] [nvarchar](250) NULL,
		[FacebookPostToIDAndToken] [nvarchar](350) NULL,
		[EnableJournal] [bit] NOT NULL,
		[EnableJournalComment] [bit] NOT NULL,
		[PostSubtitleToJournal] [bit] NOT NULL,
		[PostSummaryToJournal] [bit] NOT NULL,
		[PostTitleToJournal] [bit] NOT NULL,
		[PostImageToJournal] [bit] NOT NULL,
		CONSTRAINT [PK_EasyDNNNewsPortalSettings] PRIMARY KEY CLUSTERED ([PortalID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
	)
END
GO
IF Not EXISTS (SELECT * FROM sys.default_constraints WHERE object_id = OBJECT_ID(N'[dbo].[DF_EasyDNNNewsPortalSettings_ArticleApproveConfirm]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsPortalSettings]'))
Begin
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_EasyDNNNewsPortalSettings_ArticleApproveConfirm]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsPortalSettings] ADD  CONSTRAINT [DF_EasyDNNNewsPortalSettings_ArticleApproveConfirm]  DEFAULT ((0)) FOR [ArticleApproveConfirm]
END

End
GO
IF Not EXISTS (SELECT * FROM sys.default_constraints WHERE object_id = OBJECT_ID(N'[dbo].[DF_EasyDNNNewsPortalSettings_CommentApproveConfirm]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsPortalSettings]'))
Begin
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_EasyDNNNewsPortalSettings_CommentApproveConfirm]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsPortalSettings] ADD  CONSTRAINT [DF_EasyDNNNewsPortalSettings_CommentApproveConfirm]  DEFAULT ((0)) FOR [CommentApproveConfirm]
END

End
GO
IF Not EXISTS (SELECT * FROM sys.default_constraints WHERE object_id = OBJECT_ID(N'[dbo].[DF_EasyDNNNewsPortalSettings_EnableTwitter]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsPortalSettings]'))
Begin
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_EasyDNNNewsPortalSettings_EnableTwitter]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsPortalSettings] ADD  CONSTRAINT [DF_EasyDNNNewsPortalSettings_EnableTwitter]  DEFAULT ((0)) FOR [EnableTwitter]
END

End
GO
IF Not EXISTS (SELECT * FROM sys.default_constraints WHERE object_id = OBJECT_ID(N'[dbo].[DF_EasyDNNNewsPortalSettings_TwitterAccessToken]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsPortalSettings]'))
Begin
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_EasyDNNNewsPortalSettings_TwitterAccessToken]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsPortalSettings] ADD  CONSTRAINT [DF_EasyDNNNewsPortalSettings_TwitterAccessToken]  DEFAULT ('') FOR [TwitterAccessToken]
END

End
GO
IF Not EXISTS (SELECT * FROM sys.default_constraints WHERE object_id = OBJECT_ID(N'[dbo].[DF_EasyDNNNewsPortalSettings_EnableFacebook]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsPortalSettings]'))
Begin
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_EasyDNNNewsPortalSettings_EnableFacebook]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsPortalSettings] ADD  CONSTRAINT [DF_EasyDNNNewsPortalSettings_EnableFacebook]  DEFAULT ((0)) FOR [EnableFacebook]
END

End
GO
IF Not EXISTS (SELECT * FROM sys.default_constraints WHERE object_id = OBJECT_ID(N'[dbo].[DF_EasyDNNNewsPortalSettings_EnableJournal]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsPortalSettings]'))
Begin
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_EasyDNNNewsPortalSettings_EnableJournal]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsPortalSettings] ADD  CONSTRAINT [DF_EasyDNNNewsPortalSettings_EnableJournal]  DEFAULT ((0)) FOR [EnableJournal]
END

End
GO
IF Not EXISTS (SELECT * FROM sys.default_constraints WHERE object_id = OBJECT_ID(N'[dbo].[DF_EasyDNNNewsPortalSettings_EnableJournalComment]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsPortalSettings]'))
Begin
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_EasyDNNNewsPortalSettings_EnableJournalComment]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsPortalSettings] ADD  CONSTRAINT [DF_EasyDNNNewsPortalSettings_EnableJournalComment]  DEFAULT ((0)) FOR [EnableJournalComment]
END

End
GO
IF Not EXISTS (SELECT * FROM sys.default_constraints WHERE object_id = OBJECT_ID(N'[dbo].[DF_EasyDNNNewsPortalSettings_PostSubtitleToJournal]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsPortalSettings]'))
Begin
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_EasyDNNNewsPortalSettings_PostSubtitleToJournal]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsPortalSettings] ADD  CONSTRAINT [DF_EasyDNNNewsPortalSettings_PostSubtitleToJournal]  DEFAULT ((0)) FOR [PostSubtitleToJournal]
END

End
GO
IF Not EXISTS (SELECT * FROM sys.default_constraints WHERE object_id = OBJECT_ID(N'[dbo].[DF_EasyDNNNewsPortalSettings_PostSummaryToJournal]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsPortalSettings]'))
Begin
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_EasyDNNNewsPortalSettings_PostSummaryToJournal]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsPortalSettings] ADD  CONSTRAINT [DF_EasyDNNNewsPortalSettings_PostSummaryToJournal]  DEFAULT ((0)) FOR [PostSummaryToJournal]
END

End
GO
IF Not EXISTS (SELECT * FROM sys.default_constraints WHERE object_id = OBJECT_ID(N'[dbo].[DF_EasyDNNNewsPortalSettings_PostTitleToJournal]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsPortalSettings]'))
Begin
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_EasyDNNNewsPortalSettings_PostTitleToJournal]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsPortalSettings] ADD  CONSTRAINT [DF_EasyDNNNewsPortalSettings_PostTitleToJournal]  DEFAULT ((0)) FOR [PostTitleToJournal]
END

End
GO
IF Not EXISTS (SELECT * FROM sys.default_constraints WHERE object_id = OBJECT_ID(N'[dbo].[DF_EasyDNNNewsPortalSettings_PostImageToJournal]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsPortalSettings]'))
Begin
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_EasyDNNNewsPortalSettings_PostImageToJournal]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsPortalSettings] ADD  CONSTRAINT [DF_EasyDNNNewsPortalSettings_PostImageToJournal]  DEFAULT ((0)) FOR [PostImageToJournal]
END

End
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsPortalSettings_Portals]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsPortalSettings]'))
ALTER TABLE [dbo].[EasyDNNNewsPortalSettings]  WITH CHECK ADD  CONSTRAINT [FK_EasyDNNNewsPortalSettings_Portals] FOREIGN KEY([PortalID])
REFERENCES {databaseOwner}{objectQualifier}Portals ([PortalID])
ON DELETE CASCADE
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsPortalSettings_Portals]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsPortalSettings]'))
ALTER TABLE [dbo].[EasyDNNNewsPortalSettings] CHECK CONSTRAINT [FK_EasyDNNNewsPortalSettings_Portals]
GO

/*** Nadogradnja modulesettingsa ***/
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = 'EasyDNNNewsModuleSettings' and column_name = 'EnableTwitter')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsModuleSettings] ADD EnableTwitter bit NOT NULL DEFAULT(0)
END
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = 'EasyDNNNewsModuleSettings' and column_name = 'TwitterAccessToken')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsModuleSettings] ADD TwitterAccessToken [nvarchar](250) NULL
END
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = 'EasyDNNNewsModuleSettings' and column_name = 'TwitterAccessSecret')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsModuleSettings] ADD TwitterAccessSecret [nvarchar](250) NULL
END
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = 'EasyDNNNewsModuleSettings' and column_name = 'EnableFacebook')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsModuleSettings] ADD EnableFacebook bit NOT NULL DEFAULT(0)
END
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = 'EasyDNNNewsModuleSettings' and column_name = 'FacebookAccessToken')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsModuleSettings] ADD FacebookAccessToken [nvarchar](250) NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = 'EasyDNNNewsModuleSettings' and column_name = 'FacebookPostToIDAndToken')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsModuleSettings] ADD FacebookPostToIDAndToken [nvarchar](350) NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = 'EasyDNNNewsModuleSettings' and column_name = 'EnableJournal')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsModuleSettings] ADD EnableJournal bit NOT NULL DEFAULT(0)
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = 'EasyDNNNewsModuleSettings' and column_name = 'EnableJournalComment')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsModuleSettings] ADD EnableJournalComment bit NOT NULL DEFAULT(0)
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = 'EasyDNNNewsModuleSettings' and column_name = 'PostTitleToJournal')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsModuleSettings] ADD PostTitleToJournal bit NOT NULL DEFAULT(0)
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = 'EasyDNNNewsModuleSettings' and column_name = 'PostSubtitleToJournal')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsModuleSettings] ADD PostSubtitleToJournal bit NOT NULL DEFAULT(0)
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = 'EasyDNNNewsModuleSettings' and column_name = 'PostSummaryToJournal')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsModuleSettings] ADD PostSummaryToJournal bit NOT NULL DEFAULT(0)
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = 'EasyDNNNewsModuleSettings' and column_name = 'PostImageToJournal')
BEGIN
ALTER TABLE [dbo].[EasyDNNNewsModuleSettings] ADD PostImageToJournal bit NOT NULL DEFAULT(0)
END
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsSocialSharingStatistics]') AND type in (N'U'))
BEGIN
	SET ANSI_NULLS ON
	SET QUOTED_IDENTIFIER ON
	CREATE TABLE [dbo].[EasyDNNNewsSocialSharingStatistics](
		[StatisticID] [int] IDENTITY(1,1) NOT NULL,
		[ArticleID] [int] NOT NULL,
		[UserID] [int] NULL,
		[SocialNetwork] [tinyint] NOT NULL,
		[PostedToAccountID] [varchar](250) NOT NULL,
		[PostedToName] [nvarchar](350) NOT NULL,
		[PostType] [tinyint] NOT NULL,
		[PostDateTime] [datetime] NOT NULL,
		CONSTRAINT [PK_EasyDNNNewsSocialSharingArchive] PRIMARY KEY CLUSTERED ([StatisticID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
	)
END
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsSocialSharingStatistics_EasyDNNNews]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsSocialSharingStatistics]'))
ALTER TABLE [dbo].[EasyDNNNewsSocialSharingStatistics]  WITH CHECK ADD  CONSTRAINT [FK_EasyDNNNewsSocialSharingStatistics_EasyDNNNews] FOREIGN KEY([ArticleID])
REFERENCES [dbo].[EasyDNNNews] ([ArticleID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsSocialSharingStatistics_EasyDNNNews]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsSocialSharingStatistics]'))
ALTER TABLE [dbo].[EasyDNNNewsSocialSharingStatistics] CHECK CONSTRAINT [FK_EasyDNNNewsSocialSharingStatistics_EasyDNNNews]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsSocialSharingStatistics_Users]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsSocialSharingStatistics]'))
ALTER TABLE [dbo].[EasyDNNNewsSocialSharingStatistics]  WITH CHECK ADD  CONSTRAINT [FK_EasyDNNNewsSocialSharingStatistics_Users] FOREIGN KEY([UserID])
REFERENCES {databaseOwner}{objectQualifier}Users ([UserID])
ON DELETE SET NULL
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsSocialSharingStatistics_Users]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsSocialSharingStatistics]'))
ALTER TABLE [dbo].[EasyDNNNewsSocialSharingStatistics] CHECK CONSTRAINT [FK_EasyDNNNewsSocialSharingStatistics_Users]
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsUserNotifications]') AND type in (N'U'))
BEGIN
	SET ANSI_NULLS ON
	SET QUOTED_IDENTIFIER ON
	CREATE TABLE [dbo].[EasyDNNNewsUserNotifications](
		[UserID] [int] NOT NULL,
		[PortalID] [int] NOT NULL,
		[NewArticle] [bit] NOT NULL,
		[NewEvent] [bit] NOT NULL,
		[EditArticle] [bit] NOT NULL,
		[ApproveArticle] [bit] NOT NULL,
		[NewComment] [bit] NOT NULL,
		[ApproveComment] [bit] NOT NULL,
		CONSTRAINT [PK_EasyDNNNewsUserNotifications] PRIMARY KEY CLUSTERED ([UserID] ASC,[PortalID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
	)
END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsUserNotifications_Portals]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsUserNotifications]'))
ALTER TABLE [dbo].[EasyDNNNewsUserNotifications]  WITH CHECK ADD  CONSTRAINT [FK_EasyDNNNewsUserNotifications_Portals] FOREIGN KEY([PortalID])
REFERENCES {databaseOwner}{objectQualifier}Portals ([PortalID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsUserNotifications_Portals]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsUserNotifications]'))
ALTER TABLE [dbo].[EasyDNNNewsUserNotifications] CHECK CONSTRAINT [FK_EasyDNNNewsUserNotifications_Portals]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsUserNotifications_Users]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsUserNotifications]'))
ALTER TABLE [dbo].[EasyDNNNewsUserNotifications]  WITH CHECK ADD  CONSTRAINT [FK_EasyDNNNewsUserNotifications_Users] FOREIGN KEY([UserID])
REFERENCES {databaseOwner}{objectQualifier}Users ([UserID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsUserNotifications_Users]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsUserNotifications]'))
ALTER TABLE [dbo].[EasyDNNNewsUserNotifications] CHECK CONSTRAINT [FK_EasyDNNNewsUserNotifications_Users]
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsRoleNotifications]') AND type in (N'U'))
BEGIN
	SET ANSI_NULLS ON
	SET QUOTED_IDENTIFIER ON
	CREATE TABLE [dbo].[EasyDNNNewsRoleNotifications](
		[RoleID] [int] NOT NULL,
		[NewArticle] [bit] NOT NULL,
		[NewEvent] [bit] NOT NULL,
		[EditArticle] [bit] NOT NULL,
		[ApproveArticle] [bit] NOT NULL,
		[NewComment] [bit] NOT NULL,
		[ApproveComment] [bit] NOT NULL,
		CONSTRAINT [PK_EasyDNNNewsRoleNotifications] PRIMARY KEY CLUSTERED ([RoleID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
	)
END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsRoleNotifications_Roles]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsRoleNotifications]'))
ALTER TABLE [dbo].[EasyDNNNewsRoleNotifications]  WITH CHECK ADD  CONSTRAINT [FK_EasyDNNNewsRoleNotifications_Roles] FOREIGN KEY([RoleID])
REFERENCES {databaseOwner}{objectQualifier}Roles ([RoleID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_EasyDNNNewsRoleNotifications_Roles]') AND parent_object_id = OBJECT_ID(N'[dbo].[EasyDNNNewsRoleNotifications]'))
ALTER TABLE [dbo].[EasyDNNNewsRoleNotifications] CHECK CONSTRAINT [FK_EasyDNNNewsRoleNotifications_Roles]
GO

IF EXISTS (SELECT *  FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME ='IX_EasyDNNNewsItemTags')
BEGIN
	ALTER TABLE EasyDNNNewsNewTags DROP CONSTRAINT IX_EasyDNNNewsItemTags
END

ALTER TABLE EasyDNNNewsNewTags
ADD CONSTRAINT IX_EasyDNNNewsItemTags UNIQUE(PortalID, Name)