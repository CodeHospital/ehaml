<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DaysAgo.Text" xml:space="preserve">
    <value>{0} days ago</value>
  </data>
  <data name="HoursAgo.Text" xml:space="preserve">
    <value>{0} hours ago</value>
  </data>
  <data name="MinutesAgo.Text" xml:space="preserve">
    <value>{0} minutes ago</value>
  </data>
  <data name="SecondsAgo.Text" xml:space="preserve">
    <value>{0} seconds ago</value>
  </data>
  <data name="LicenseInvalid.Message" xml:space="preserve">
    <value>&lt;div class="bkp-attentionbackground bkp-centeredrow"&gt;&lt;img class="bkp-centeredrow" src="{0}"&gt; The license key is invalid. Please check the module's &lt;a href={1} Class="CommandButton"&gt;'Configuration &gt; License Key and Details' page for details.&lt;/a&gt;&lt;/div&gt;</value>
  </data>
  <data name="LicenseExpires.Message" xml:space="preserve">
    <value>&lt;div class="bkp-attentionbackground bkp-centeredrow"&gt;&lt;img class="bkp-centeredrow" src="{0}"&gt; Your {1} license {2} on {3}&lt;br /&gt;
Please use the 'Request License Assistance' link found in &lt;a href={4} Class="CommandButton"&gt; 'Configuration &gt; License Key and Details'&lt;/a&gt; to request a new key.
&lt;/div&gt;</value>
  </data>
  <data name="LicenseFreeEdition.Message" xml:space="preserve">
    <value>&lt;p class="bkp-attentionbackground"&gt;&lt;b&gt;FREE EDITION NOTICE:&lt;/b&gt;&lt;br /&gt;Your current license is fully functional on any 'localhost' or '*.local' site/domain. &lt;br /&gt;For complete functionality in the current site/domain, please purchase a valid license key for your domain (&lt;a target="_blank"  Class="CommandButton" href="http://www.evotiva.com/Products/DNNBackup/Purchase.aspx"&gt;Contact Evotiva&lt;/a&gt;).&lt;/p&gt;</value>
  </data>
  <data name="DayAgo.Text" xml:space="preserve">
    <value>1 day ago</value>
  </data>
  <data name="DayAndHoursAgo.Text" xml:space="preserve">
    <value>1 day and {0} hours ago</value>
  </data>
  <data name="HourAgo.Text" xml:space="preserve">
    <value>1 hour ago</value>
  </data>
  <data name="HourAndMinutesAgo.Text" xml:space="preserve">
    <value>1 hour and {0} minutes ago</value>
  </data>
  <data name="MinuteAgo.Text" xml:space="preserve">
    <value>1 minute ago</value>
  </data>
  <data name="AddAll.Text" xml:space="preserve">
    <value>Add all Available items to Assigned</value>
  </data>
  <data name="Add.Text" xml:space="preserve">
    <value>Add selected Available item to Assigned</value>
  </data>
  <data name="Assigned.Text" xml:space="preserve">
    <value>Assigned</value>
  </data>
  <data name="Attention.Text" xml:space="preserve">
    <value>Attention</value>
  </data>
  <data name="Available.Text" xml:space="preserve">
    <value>Available</value>
  </data>
  <data name="HistoryDetails.Text" xml:space="preserve">
    <value>Browse all the files found on the configured Backup Folder.</value>
  </data>
  <data name="History.Text" xml:space="preserve">
    <value>Browser</value>
  </data>
  <data name="Configuration.Text" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="ConfigurationDetails.Text" xml:space="preserve">
    <value>Configure all the default and scheduled settings for the backup operations.</value>
  </data>
  <data name="ShortDateFormat.Text" xml:space="preserve">
    <value>d MMM yyyy</value>
  </data>
  <data name="LongDateFormat.Text" xml:space="preserve">
    <value>d MMMM yyyy</value>
  </data>
  <data name="SettingsDatabase.Text" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="LongDateTimeFormat.Text" xml:space="preserve">
    <value>dddd, dd MMMM yyyy h:mm tt</value>
  </data>
  <data name="Error.Text" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="SettingsFiles.Text" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="SettingsGlobal.Text" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="Home.Text" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Information.Text" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="HomeDetails.Text" xml:space="preserve">
    <value>Launch Manual Backup and Restore operations.</value>
  </data>
  <data name="SettingsLicensing.Text" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="Local.Text" xml:space="preserve">
    <value>Local</value>
  </data>
  <data name="NotAvailable.Text" xml:space="preserve">
    <value>n/a</value>
  </data>
  <data name="UpdateDetails.Text" xml:space="preserve">
    <value>New version available: {0}, released on {1}. Follow this link for more information.</value>
  </data>
  <data name="OK.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Remote.Text" xml:space="preserve">
    <value>Remote</value>
  </data>
  <data name="RemoveAll.Text" xml:space="preserve">
    <value>Remove all Assigned items</value>
  </data>
  <data name="Remove.Text" xml:space="preserve">
    <value>Remove selected Assigned item</value>
  </data>
  <data name="SettingsScheduler.Text" xml:space="preserve">
    <value>Scheduler</value>
  </data>
  <data name="Utilities.Text" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="Update.Text" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="DatabaseServerInfo.Message" xml:space="preserve">
    <value>Database Server (&lt;b&gt;&lt;TYPE&gt;&lt;/b&gt;): &lt;NAME&gt;&lt;br /&gt;
Version: &lt;VERSION&gt;&lt;br /&gt;
Machine Name: &lt;MACHINENAME&gt; / Web Server Name: &lt;WEBSERVER&gt;&lt;br /&gt;
Database Name: &lt;DATABASENAME&gt;&lt;br /&gt;
&lt;CUSTOMSCHEMA&gt;
&lt;DATABASEFILE&gt;</value>
  </data>
  <data name="ShortDateTimeFormat.Text" xml:space="preserve">
    <value>d MMM yyyy h:mm tt</value>
  </data>
  <data name="SettingsOffSite.Text" xml:space="preserve">
    <value>OffSite</value>
  </data>
  <data name="Day.Text" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="Days.Text" xml:space="preserve">
    <value>Days</value>
  </data>
  <data name="Hour.Text" xml:space="preserve">
    <value>Hour</value>
  </data>
  <data name="Hours.Text" xml:space="preserve">
    <value>Hours</value>
  </data>
  <data name="TimeLapsePrefix.Text" xml:space="preserve">
    <value>Every</value>
  </data>
  <data name="Week.Text" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="Weeks.Text" xml:space="preserve">
    <value>Weeks</value>
  </data>
  <data name="Expired.Text" xml:space="preserve">
    <value>expired</value>
  </data>
  <data name="Subscription.Text" xml:space="preserve">
    <value>Subscription</value>
  </data>
  <data name="Temporary.Text" xml:space="preserve">
    <value>Temporary</value>
  </data>
  <data name="WillExpire.Text" xml:space="preserve">
    <value>will expire</value>
  </data>
</root>