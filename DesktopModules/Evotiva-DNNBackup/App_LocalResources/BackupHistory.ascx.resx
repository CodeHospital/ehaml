<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BackupHistoryDisabled.Message" xml:space="preserve">
    <value>This feature requires a valid license key, and it is not available on the free edition.</value>
  </data>
  <data name="CheckedFilesAreSameType.Text" xml:space="preserve">
    <value>Checked Files are of the same Type</value>
  </data>
  <data name="cmdRestore.Text" xml:space="preserve">
    <value>Restore selected</value>
  </data>
  <data name="cmdReturn.Text" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="ConfirmRestore.Text" xml:space="preserve">
    <value>Confirm Restore?</value>
  </data>
  <data name="ControlTitle_backuphistory.Text" xml:space="preserve">
    <value>Backup Folder Browser</value>
  </data>
  <data name="Date.Header" xml:space="preserve">
    <value>Date modified</value>
  </data>
  <data name="DeleteFileImg.AlternateText" xml:space="preserve">
    <value>Delete file</value>
  </data>
  <data name="EnsureDeleteFile.Text" xml:space="preserve">
    <value>Confirm delete file?</value>
  </data>
  <data name="EnsureZipFile.Text" xml:space="preserve">
    <value>Confirm compress file?</value>
  </data>
  <data name="Extension.Header" xml:space="preserve">
    <value>Extension</value>
  </data>
  <data name="FileName.Header" xml:space="preserve">
    <value>File name</value>
  </data>
  <data name="lblFilter.Text" xml:space="preserve">
    <value>Filter Files:</value>
  </data>
  <data name="MaxTwoFilesShouldBeChecked.Text" xml:space="preserve">
    <value>Maximum two files should be checked to be restored</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>&lt;STRONG&gt;Evotiva DNNBackup for DotNetNuke&lt;/STRONG&gt;
&lt;P&gt;
&lt;strong&gt;Documentation&lt;/span&gt;&lt;/strong&gt;&lt;BR&gt;
&lt;a target="_blank" 
   href="http://www.evotiva.com/Products/DNNBackup/Documentation.aspx"&gt;
   http://www.evotiva.com/Products/DNNBackup/Documentation.aspx
&lt;/a&gt;
&lt;/P&gt;
&lt;P&gt;
&lt;STRONG&gt;License&lt;/STRONG&gt;&lt;BR&gt;
THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A 
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS 
BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE 
GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&lt;BR&gt;
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF 
THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
&lt;/P&gt;
&lt;p&gt;
Feel free to 
&lt;a target="_blank" href="http://www.evotiva.com/ContactUs.aspx"&gt;contact us&lt;/a&gt; for any feedback.
&lt;br&gt;
&lt;a target="_blank" href="http://www.evotiva.com"&gt;http://www.evotiva.com&lt;/a&gt;
&lt;/p&gt;
</value>
  </data>
  <data name="Size.Header" xml:space="preserve">
    <value>Size (Kb)</value>
  </data>
  <data name="UnrecongnizedFileType.Text" xml:space="preserve">
    <value>Unrecongnized FileType (check that the selected file name matches the defined template for this kind of file in the module's settings page, )</value>
  </data>
  <data name="ZipFileImg.AlternateText" xml:space="preserve">
    <value>Compress file</value>
  </data>
  <data name="AllFiles.Text" xml:space="preserve">
    <value>All Files</value>
  </data>
  <data name="DbNativeCompressed.Text" xml:space="preserve">
    <value>Native Compressed</value>
  </data>
  <data name="DbNativeDecompressed.Text" xml:space="preserve">
    <value>Native Decompressed</value>
  </data>
  <data name="DbScript.Text" xml:space="preserve">
    <value>Script Compressed</value>
  </data>
  <data name="FilesBackup.Text" xml:space="preserve">
    <value>Files Backup</value>
  </data>
  <data name="BackupLogFiles.Text" xml:space="preserve">
    <value>Backup Log</value>
  </data>
  <data name="ItemsPerPage.Text" xml:space="preserve">
    <value>Items Per Page:</value>
  </data>
  <data name="lblTitle.Text" xml:space="preserve">
    <value>Backup Folder Browser</value>
  </data>
  <data name="RestoreLogFiles.Text" xml:space="preserve">
    <value>Restore Log</value>
  </data>
  <data name="Type.Header" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Unknown.Text" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="First.Text" xml:space="preserve">
    <value>First</value>
  </data>
  <data name="Last.Text" xml:space="preserve">
    <value>Last</value>
  </data>
  <data name="FilesSourceAmazonS3.Text" xml:space="preserve">
    <value>Amazon S3</value>
  </data>
  <data name="FilesSourceCloudfiles.Text" xml:space="preserve">
    <value>Rackspace Cloudfiles</value>
  </data>
  <data name="FilesSourceDropbox.Text" xml:space="preserve">
    <value>Dropbox</value>
  </data>
  <data name="FilesSourceFTP.Text" xml:space="preserve">
    <value>(S)FTP</value>
  </data>
  <data name="FilesSourceLocal.Text" xml:space="preserve">
    <value>Local Files</value>
  </data>
  <data name="FilesSourceWindowsAzure.Text" xml:space="preserve">
    <value>Windows Azure</value>
  </data>
  <data name="lblFilesLocation.Text" xml:space="preserve">
    <value>Files Source:</value>
  </data>
  <data name="RemoteFileDownloaded.Text" xml:space="preserve">
    <value>The offsite file was downloaded to the web server. You can find it on the [Local Files] list.</value>
  </data>
  <data name="NoRowsFound.Text" xml:space="preserve">
    <value>No files were found on the configured 'Backup' folder.</value>
  </data>
</root>